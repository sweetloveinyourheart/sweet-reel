- name: api_gateway
  shortName: Run as api_gateway service
  long: ""
  service:
    ports: []
    healthCheckPorts:
    - name: healthcheck-grpc
      wireProtocol: tcp
      protocol: grpc
      public: false
      defaultRoutes: []
      flagName: healthcheck-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.port
      defaultValue: 5051
      env:
      - SWEET_REEL_HEALTHCHECK_PORT
    - name: healthcheck-web
      wireProtocol: tcp
      protocol: http
      public: false
      defaultRoutes:
      - /healthz
      - /readyz
      flagName: healthcheck-web-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.web.port
      defaultValue: 5052
      env:
      - SWEET_REEL_HEALTHCHECK_WEB_PORT
    defaultDatabaseName: ""
  config:
  - name: auth-server-url
    usage: Auth server connection URL
    default: http://auth:50070
    valueType: string
    path: api_gateway.auth_server.url
    env:
    - API_GATEWAY_AUTH_SERVER_URL
  - name: http-port
    usage: HTTP Port to listen on
    default: 8080
    valueType: int64
    path: api_gateway.http.port
    env:
    - API_GATEWAY_HTTP_PORT
  - name: id
    usage: Unique identifier for this services
    default: ""
    valueType: string
    path: api_gateway.id
    env:
    - API_GATEWAY_ID
  - name: token-signing-key
    usage: Signing key used for service to service tokens
    default: ""
    valueType: string
    path: api_gateway.secrets.token_signing_key
    env:
    - API_GATEWAY_SECRETS_TOKEN_SIGNING_KEY
  - name: user-server-url
    usage: User server connection URL
    default: http://user:50065
    valueType: string
    path: api_gateway.user_server.url
    env:
    - API_GATEWAY_USER_SERVER_URL
  - name: video-management-url
    usage: Video Management server connection URL
    default: http://user:50060
    valueType: string
    path: api_gateway.video_management.url
    env:
    - API_GATEWAY_VIDEO_MANAGEMENT_SERVER_URL
  - name: healthcheck-host
    usage: Host to listen on for services that support a health check
    default: localhost
    valueType: string
    path: healthcheck.host
    env:
    - SWEET_REEL_HEALTHCHECK_HOST
  - name: healthcheck-port
    usage: Port to listen on for services that support a health check
    default: 5051
    valueType: int
    path: healthcheck.port
    env:
    - SWEET_REEL_HEALTHCHECK_PORT
  - name: healthcheck-web-port
    usage: Port to listen on for services that support a health check
    default: 5052
    valueType: int
    path: healthcheck.web.port
    env:
    - SWEET_REEL_HEALTHCHECK_WEB_PORT
  - name: log-level
    usage: log level to use
    default: info
    valueType: string
    path: log.level
    env:
    - LOG_LEVEL
  - name: service
    usage: which service to run
    default: ""
    valueType: string
    path: service
    env:
    - SWEET_REEL_SERVICE
- name: auth
  shortName: Run as auth service
  long: ""
  service:
    ports: []
    healthCheckPorts:
    - name: healthcheck-grpc
      wireProtocol: tcp
      protocol: grpc
      public: false
      defaultRoutes: []
      flagName: healthcheck-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.port
      defaultValue: 5051
      env:
      - SWEET_REEL_HEALTHCHECK_PORT
    - name: healthcheck-web
      wireProtocol: tcp
      protocol: http
      public: false
      defaultRoutes:
      - /healthz
      - /readyz
      flagName: healthcheck-web-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.web.port
      defaultValue: 5052
      env:
      - SWEET_REEL_HEALTHCHECK_WEB_PORT
    defaultDatabaseName: ""
  config:
  - name: google-oauth-client-id
    usage: ""
    default: ""
    valueType: string
    path: auth.google.oauth.client_id
    env:
    - AUTH_GOOGLE_OAUTH_CLIENT_ID
  - name: google-oauth-client-secret
    usage: ""
    default: ""
    valueType: string
    path: auth.google.oauth.client_secret
    env:
    - AUTH_GOOGLE_OAUTH_CLIENT_SECRET
  - name: google-oauth-redirect-url
    usage: ""
    default: ""
    valueType: string
    path: auth.google.oauth.redirect_url
    env:
    - AUTH_GOOGLE_OAUTH_REDIRECT_URL
  - name: grpc-port
    usage: GRPC Port to listen on
    default: 50060
    valueType: int64
    path: auth.grpc.port
    env:
    - AUTH_GRPC_PORT
  - name: id
    usage: Unique identifier for this services
    default: ""
    valueType: string
    path: auth.id
    env:
    - AUTH_ID
  - name: token-signing-key
    usage: Signing key used for service to service tokens
    default: ""
    valueType: string
    path: auth.secrets.token_signing_key
    env:
    - AUTH_SECRETS_TOKEN_SIGNING_KEY
  - name: user-server-url
    usage: User server connection URL
    default: http://user:50065
    valueType: string
    path: auth.user_server.url
    env:
    - AUTH_USER_SERVER_URL
  - name: healthcheck-host
    usage: Host to listen on for services that support a health check
    default: localhost
    valueType: string
    path: healthcheck.host
    env:
    - SWEET_REEL_HEALTHCHECK_HOST
  - name: healthcheck-port
    usage: Port to listen on for services that support a health check
    default: 5051
    valueType: int
    path: healthcheck.port
    env:
    - SWEET_REEL_HEALTHCHECK_PORT
  - name: healthcheck-web-port
    usage: Port to listen on for services that support a health check
    default: 5052
    valueType: int
    path: healthcheck.web.port
    env:
    - SWEET_REEL_HEALTHCHECK_WEB_PORT
  - name: log-level
    usage: log level to use
    default: info
    valueType: string
    path: log.level
    env:
    - LOG_LEVEL
  - name: service
    usage: which service to run
    default: ""
    valueType: string
    path: service
    env:
    - SWEET_REEL_SERVICE
- name: user
  shortName: Run as user service
  long: ""
  service:
    ports: []
    healthCheckPorts:
    - name: healthcheck-grpc
      wireProtocol: tcp
      protocol: grpc
      public: false
      defaultRoutes: []
      flagName: healthcheck-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.port
      defaultValue: 5051
      env:
      - SWEET_REEL_HEALTHCHECK_PORT
    - name: healthcheck-web
      wireProtocol: tcp
      protocol: http
      public: false
      defaultRoutes:
      - /healthz
      - /readyz
      flagName: healthcheck-web-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.web.port
      defaultValue: 5052
      env:
      - SWEET_REEL_HEALTHCHECK_WEB_PORT
    defaultDatabaseName: ""
  config:
  - name: db-migrations-url
    usage: Database connection migrations URL
    default: ""
    valueType: string
    path: user.db.migrations.url
    env:
    - USER_DB_MIGRATIONS_URL
  - name: db-postgres-connection-max-idletime
    usage: Max connection idle time in seconds
    default: 180
    valueType: int64
    path: user.db.postgres.max_idletime
    env:
    - USER_DB_POSTGRES_CONNECTION_MAX_IDLETIME
  - name: db-postgres-connection-max-lifetime
    usage: Max connection lifetime in seconds
    default: 300
    valueType: int64
    path: user.db.postgres.max_lifetime
    env:
    - USER_DB_POSTGRES_CONNECTION_MAX_LIFETIME
  - name: db-postgres-max-idle-connections
    usage: Maximum number of idle connections
    default: 50
    valueType: int64
    path: user.db.postgres.max_idle_connections
    env:
    - USER_DB_POSTGRES_MAX_IDLE_CONNECTIONS
  - name: db-postgres-max-open-connections
    usage: Maximum number of connections
    default: 500
    valueType: int64
    path: user.db.postgres.max_open_connections
    env:
    - USER_DB_POSTGRES_MAX_OPEN_CONNECTIONS
  - name: db-postgres-timeout
    usage: Timeout for postgres connection
    default: 60
    valueType: int64
    path: user.db.postgres.timeout
    env:
    - USER_DB_POSTGRES_TIMEOUT
  - name: db-read-url
    usage: Database connection readonly URL
    default: ""
    valueType: string
    path: user.db.read.url
    env:
    - USER_DB_READ_URL
  - name: db-url
    usage: Database connection URL
    default: ""
    valueType: string
    path: user.db.url
    env:
    - USER_DB_URL
  - name: grpc-port
    usage: GRPC Port to listen on
    default: 50060
    valueType: int64
    path: user.grpc.port
    env:
    - USER_GRPC_PORT
  - name: id
    usage: Unique identifier for this services
    default: ""
    valueType: string
    path: user.id
    env:
    - USER_ID
  - name: token-signing-key
    usage: Signing key used for service to service tokens
    default: ""
    valueType: string
    path: user.secrets.token_signing_key
    env:
    - USER_SECRETS_TOKEN_SIGNING_KEY
  - name: healthcheck-host
    usage: Host to listen on for services that support a health check
    default: localhost
    valueType: string
    path: healthcheck.host
    env:
    - SWEET_REEL_HEALTHCHECK_HOST
  - name: healthcheck-port
    usage: Port to listen on for services that support a health check
    default: 5051
    valueType: int
    path: healthcheck.port
    env:
    - SWEET_REEL_HEALTHCHECK_PORT
  - name: healthcheck-web-port
    usage: Port to listen on for services that support a health check
    default: 5052
    valueType: int
    path: healthcheck.web.port
    env:
    - SWEET_REEL_HEALTHCHECK_WEB_PORT
  - name: log-level
    usage: log level to use
    default: info
    valueType: string
    path: log.level
    env:
    - LOG_LEVEL
  - name: service
    usage: which service to run
    default: ""
    valueType: string
    path: service
    env:
    - SWEET_REEL_SERVICE
- name: video_management
  shortName: Run as video_management service
  long: ""
  service:
    ports: []
    healthCheckPorts:
    - name: healthcheck-grpc
      wireProtocol: tcp
      protocol: grpc
      public: false
      defaultRoutes: []
      flagName: healthcheck-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.port
      defaultValue: 5051
      env:
      - SWEET_REEL_HEALTHCHECK_PORT
    - name: healthcheck-web
      wireProtocol: tcp
      protocol: http
      public: false
      defaultRoutes:
      - /healthz
      - /readyz
      flagName: healthcheck-web-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.web.port
      defaultValue: 5052
      env:
      - SWEET_REEL_HEALTHCHECK_WEB_PORT
    defaultDatabaseName: ""
  config:
  - name: aws_s3_access_id
    usage: s3 access id
    default: ""
    valueType: string
    path: video_management.aws.s3.access.id
    env:
    - VIDEO_MANAGEMENT_AWS_S3_ACCESS_ID
  - name: aws_s3_region
    usage: s3 region
    default: ""
    valueType: string
    path: video_management.aws.s3.region
    env:
    - VIDEO_MANAGEMENT_AWS_S3_REGION
  - name: aws_s3_secret
    usage: s3 secret
    default: ""
    valueType: string
    path: video_management.aws.s3.secret
    env:
    - VIDEO_MANAGEMENT_AWS_S3_SECRET
  - name: db-migrations-url
    usage: Database connection migrations URL
    default: ""
    valueType: string
    path: video_management.db.migrations.url
    env:
    - VIDEO_MANAGEMENT_DB_MIGRATIONS_URL
  - name: db-postgres-connection-max-idletime
    usage: Max connection idle time in seconds
    default: 180
    valueType: int64
    path: video_management.db.postgres.max_idletime
    env:
    - VIDEO_MANAGEMENT_DB_POSTGRES_CONNECTION_MAX_IDLETIME
  - name: db-postgres-connection-max-lifetime
    usage: Max connection lifetime in seconds
    default: 300
    valueType: int64
    path: video_management.db.postgres.max_lifetime
    env:
    - VIDEO_MANAGEMENT_DB_POSTGRES_CONNECTION_MAX_LIFETIME
  - name: db-postgres-max-idle-connections
    usage: Maximum number of idle connections
    default: 50
    valueType: int64
    path: video_management.db.postgres.max_idle_connections
    env:
    - VIDEO_MANAGEMENT_DB_POSTGRES_MAX_IDLE_CONNECTIONS
  - name: db-postgres-max-open-connections
    usage: Maximum number of connections
    default: 500
    valueType: int64
    path: video_management.db.postgres.max_open_connections
    env:
    - VIDEO_MANAGEMENT_DB_POSTGRES_MAX_OPEN_CONNECTIONS
  - name: db-postgres-timeout
    usage: Timeout for postgres connection
    default: 60
    valueType: int64
    path: video_management.db.postgres.timeout
    env:
    - VIDEO_MANAGEMENT_DB_POSTGRES_TIMEOUT
  - name: db-read-url
    usage: Database connection readonly URL
    default: ""
    valueType: string
    path: video_management.db.read.url
    env:
    - VIDEO_MANAGEMENT_DB_READ_URL
  - name: db-url
    usage: Database connection URL
    default: ""
    valueType: string
    path: video_management.db.url
    env:
    - VIDEO_MANAGEMENT_DB_URL
  - name: grpc-port
    usage: GRPC Port to listen on
    default: 50060
    valueType: int64
    path: video_management.grpc.port
    env:
    - VIDEO_MANAGEMENT_GRPC_PORT
  - name: id
    usage: Unique identifier for this services
    default: ""
    valueType: string
    path: video_management.id
    env:
    - VIDEO_MANAGEMENT_ID
  - name: minio-url
    usage: MINIO URL
    default: ""
    valueType: string
    path: video_management.minio.url
    env:
    - VIDEO_MANAGEMENT_MINIO_URL
  - name: s3_bucket
    usage: s3 bucket
    default: ""
    valueType: string
    path: video_management.aws.s3.bucket
    env:
    - VIDEO_MANAGEMENT_AWS_S3_BUCKET
  - name: token-signing-key
    usage: Signing key used for service to service tokens
    default: ""
    valueType: string
    path: video_management.secrets.token_signing_key
    env:
    - VIDEO_MANAGEMENT_SECRETS_TOKEN_SIGNING_KEY
  - name: healthcheck-host
    usage: Host to listen on for services that support a health check
    default: localhost
    valueType: string
    path: healthcheck.host
    env:
    - SWEET_REEL_HEALTHCHECK_HOST
  - name: healthcheck-port
    usage: Port to listen on for services that support a health check
    default: 5051
    valueType: int
    path: healthcheck.port
    env:
    - SWEET_REEL_HEALTHCHECK_PORT
  - name: healthcheck-web-port
    usage: Port to listen on for services that support a health check
    default: 5052
    valueType: int
    path: healthcheck.web.port
    env:
    - SWEET_REEL_HEALTHCHECK_WEB_PORT
  - name: log-level
    usage: log level to use
    default: info
    valueType: string
    path: log.level
    env:
    - LOG_LEVEL
  - name: service
    usage: which service to run
    default: ""
    valueType: string
    path: service
    env:
    - SWEET_REEL_SERVICE
- name: video_processing
  shortName: Run as video_processing service
  long: ""
  service:
    ports: []
    healthCheckPorts:
    - name: healthcheck-grpc
      wireProtocol: tcp
      protocol: grpc
      public: false
      defaultRoutes: []
      flagName: healthcheck-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.port
      defaultValue: 5051
      env:
      - SWEET_REEL_HEALTHCHECK_PORT
    - name: healthcheck-web
      wireProtocol: tcp
      protocol: http
      public: false
      defaultRoutes:
      - /healthz
      - /readyz
      flagName: healthcheck-web-port
      flagUsage: Port to listen on for services that support a health check
      configName: healthcheck.web.port
      defaultValue: 5052
      env:
      - SWEET_REEL_HEALTHCHECK_WEB_PORT
    defaultDatabaseName: ""
  config:
  - name: aws_s3_access_id
    usage: s3 access id
    default: ""
    valueType: string
    path: video_processing.aws.s3.access.id
    env:
    - VIDEO_PROCESSING_AWS_S3_ACCESS_ID
  - name: aws_s3_region
    usage: s3 region
    default: ""
    valueType: string
    path: video_processing.aws.s3.region
    env:
    - VIDEO_PROCESSING_AWS_S3_REGION
  - name: aws_s3_secret
    usage: s3 secret
    default: ""
    valueType: string
    path: video_processing.aws.s3.secret
    env:
    - VIDEO_PROCESSING_AWS_S3_SECRET
  - name: grpc-port
    usage: GRPC Port to listen on
    default: 50055
    valueType: int64
    path: video_processing.grpc.port
    env:
    - VIDEO_PROCESSING_GRPC_PORT
  - name: id
    usage: Unique identifier for this services
    default: ""
    valueType: string
    path: video_processing.id
    env:
    - VIDEO_PROCESSING_ID
  - name: kafka-brokers
    usage: Kafka broker addresses (comma-separated)
    default: localhost:9092
    valueType: string
    path: video_processing.kafka.brokers
    env:
    - VIDEO_PROCESSING_KAFKA_BROKERS
  - name: kafka-compression
    usage: Compression codec (none, gzip, snappy, lz4, zstd)
    default: snappy
    valueType: string
    path: video_processing.kafka.compression
    env:
    - VIDEO_PROCESSING_KAFKA_COMPRESSION
  - name: kafka-flush-bytes
    usage: Number of bytes to buffer before flushing
    default: 16384
    valueType: int32
    path: video_processing.kafka.flush_bytes
    env:
    - VIDEO_PROCESSING_KAFKA_FLUSH_BYTES
  - name: kafka-flush-frequency-ms
    usage: Frequency of flushing messages in milliseconds
    default: 500
    valueType: int64
    path: video_processing.kafka.flush_frequency_ms
    env:
    - VIDEO_PROCESSING_KAFKA_FLUSH_FREQUENCY_MS
  - name: kafka-flush-messages
    usage: Number of messages to buffer before flushing
    default: 100
    valueType: int32
    path: video_processing.kafka.flush_messages
    env:
    - VIDEO_PROCESSING_KAFKA_FLUSH_MESSAGES
  - name: kafka-idempotent-writes
    usage: Enable idempotent writes
    default: true
    valueType: bool
    path: video_processing.kafka.idempotent_writes
    env:
    - VIDEO_PROCESSING_KAFKA_IDEMPOTENT_WRITES
  - name: kafka-max-open-requests
    usage: Max open requests
    default: 1
    valueType: int32
    path: video_processing.kafka.max_open_requests
    env:
    - VIDEO_PROCESSING_KAFKA_MAX_OPEN_REQUESTS
  - name: kafka-required-acks
    usage: Required acknowledgments (none, leader, all)
    default: all
    valueType: string
    path: video_processing.kafka.required_acks
    env:
    - VIDEO_PROCESSING_KAFKA_REQUIRED_ACKS
  - name: kafka-retry-backoff-ms
    usage: Backoff time between retries in milliseconds
    default: 100
    valueType: int64
    path: video_processing.kafka.retry_backoff_ms
    env:
    - VIDEO_PROCESSING_KAFKA_RETRY_BACKOFF_MS
  - name: kafka-retry-max
    usage: Maximum number of retries for failed requests
    default: 3
    valueType: int32
    path: video_processing.kafka.retry_max
    env:
    - VIDEO_PROCESSING_KAFKA_RETRY_MAX
  - name: kafka-sasl-mechanism
    usage: SASL mechanism (PLAIN, SCRAM-SHA-256, SCRAM-SHA-512)
    default: ""
    valueType: string
    path: video_processing.kafka.sasl_mechanism
    env:
    - VIDEO_PROCESSING_KAFKA_SASL_MECHANISM
  - name: kafka-sasl-password
    usage: SASL password for authentication
    default: ""
    valueType: string
    path: video_processing.kafka.sasl_password
    env:
    - VIDEO_PROCESSING_KAFKA_SASL_PASSWORD
  - name: kafka-sasl-username
    usage: SASL username for authentication
    default: ""
    valueType: string
    path: video_processing.kafka.sasl_username
    env:
    - VIDEO_PROCESSING_KAFKA_SASL_USERNAME
  - name: kafka-security-protocol
    usage: Security protocol (PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL)
    default: PLAINTEXT
    valueType: string
    path: video_processing.kafka.security_protocol
    env:
    - VIDEO_PROCESSING_KAFKA_SECURITY_PROTOCOL
  - name: kafka-tls-enabled
    usage: Enable TLS encryption
    default: false
    valueType: bool
    path: video_processing.kafka.tls_enabled
    env:
    - VIDEO_PROCESSING_KAFKA_TLS_ENABLED
  - name: minio-url
    usage: MINIO URL
    default: ""
    valueType: string
    path: video_processing.minio.url
    env:
    - VIDEO_PROCESSING_MINIO_URL
  - name: s3_bucket
    usage: s3 bucket
    default: ""
    valueType: string
    path: video_processing.aws.s3.bucket
    env:
    - VIDEO_PROCESSING_AWS_S3_BUCKET
  - name: token-signing-key
    usage: Signing key used for service to service tokens
    default: ""
    valueType: string
    path: video_processing.secrets.token_signing_key
    env:
    - VIDEO_PROCESSING_SECRETS_TOKEN_SIGNING_KEY
  - name: healthcheck-host
    usage: Host to listen on for services that support a health check
    default: localhost
    valueType: string
    path: healthcheck.host
    env:
    - SWEET_REEL_HEALTHCHECK_HOST
  - name: healthcheck-port
    usage: Port to listen on for services that support a health check
    default: 5051
    valueType: int
    path: healthcheck.port
    env:
    - SWEET_REEL_HEALTHCHECK_PORT
  - name: healthcheck-web-port
    usage: Port to listen on for services that support a health check
    default: 5052
    valueType: int
    path: healthcheck.web.port
    env:
    - SWEET_REEL_HEALTHCHECK_WEB_PORT
  - name: log-level
    usage: log level to use
    default: info
    valueType: string
    path: log.level
    env:
    - LOG_LEVEL
  - name: service
    usage: which service to run
    default: ""
    valueType: string
    path: service
    env:
    - SWEET_REEL_SERVICE
